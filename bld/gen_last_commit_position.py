#!/usr/bin/env python
# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""Generates last_commit_position.h."""

import argparse
import os
import re
import subprocess


SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
REPO_ROOT = os.path.dirname(SCRIPT_DIR)


parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('-o', '--output', help='The path to write the file to.')
args = parser.parse_args()

ROOT_TAG = 'initial-commit'
describe_output = subprocess.check_output(
    ['git', 'describe', 'HEAD', '--match', ROOT_TAG],
    cwd=REPO_ROOT)
mo = re.match(ROOT_TAG + '-(\d+)-g([0-9a-f]+)', describe_output)
if not mo:
  raise ValueError(
      'Unexpected output from git describe when generating version header')

contents = '''\
// Generated by build/gen_last_commit_position.py.

#ifndef OUT_LAST_COMMIT_POSITION_H_
#define OUT_LAST_COMMIT_POSITION_H_

#define LAST_COMMIT_POSITION "%s (%s)"

#endif  // OUT_LAST_COMMIT_POSITION_H_
''' % (mo.group(1), mo.group(2))

# Only write/touch this file if the commit position has changed.
old_contents = ''
if os.path.isfile(args.output):
  with open(args.output, 'rb') as f:
    old_contents = f.read()

if old_contents != contents:
  with open(args.output, 'wb') as f:
    f.write(contents)
