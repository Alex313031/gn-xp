# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

toolchain("clang") {
  tool("cxx") {
    depfile = "{{output}}.d"
    command = "clang++ -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CXX {{source}}"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o",
    ]
  }

  tool("objcxx") {
    depfile = "{{output}}.d"
    command = "clang++ -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CXX {{source}}"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o",
    ]
  }

  tool("alink") {
    command = "rm -f {{output}} && ar rcs {{output}} {{inputs}}"
    description = "AR {{target_output_name}}{{output_extension}}"
    outputs = [
      "{{target_out_dir}}/{{target_output_name}}{{output_extension}}",
    ]
    default_output_extension = ".a"
    output_prefix = "lib"
  }

  tool("link") {
    outfile = "{{target_output_name}}{{output_extension}}"
    command = "clang++ {{ldflags}} -o $outfile {{inputs}} {{libs}}"
    description = "LINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    outputs = [
      outfile,
    ]
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "STAMP {{output}}"
  }

  tool("copy") {
    command = "cp -af {{source}} {{output}}"
    description = "COPY {{source}} {{output}}"
  }
}

config("compile_flags") {
  include_dirs = [
    "$root_build_dir",
    "//",
  ]

  cflags = [
    "-O3",
    "-DNDEBUG",
    "-D_FILE_OFFSET_BITS=64",
    "-D__STDC_CONSTANT_MACROS",
    "-D__STDC_FORMAT_MACROS",
    "-pthread",
    "-pipe",
    "-fno-exceptions",
    "-fno-rtti",
    "-fdiagnostics-color",
  ]

  cflags_cc = [
    "-std=c++14",
    "-Wno-c++11-narrowing",
  ]

  if (is_mac) {
    cflags += [ "-mmacosx-version-min=10.9" ]
  }
}

config("link_flags") {
  ldflags = [ "-O3" ]

  if (is_mac) {
    ldflags += [
      "-mmacosx-version-min=10.9",
      "-framework",
      "AppKit",
      "-framework",
      "CoreFoundation",
      "-framework",
      "Foundation",
      "-framework",
      "Security",
    ]
  }
}

