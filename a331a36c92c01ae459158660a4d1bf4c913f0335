{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8afb4164_b414335e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-04-15T23:31:05Z",
      "side": 1,
      "message": "What is the reason for needing this capability?",
      "revId": "a331a36c92c01ae459158660a4d1bf4c913f0335",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97983026_aeb67fd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-19T14:04:46Z",
      "side": 1,
      "message": "It will be used by a future data structure in https://gn-review.googlesource.com/c/gn/+/13563 used to speed up recursive set merges during target resolution.",
      "parentUuid": "8afb4164_b414335e",
      "revId": "a331a36c92c01ae459158660a4d1bf4c913f0335",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9d0cdb1_fa08d846",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-20T08:16:59Z",
      "side": 1,
      "message": "How much performance or memory usage difference do we see if we use malloc/free instead?",
      "revId": "a331a36c92c01ae459158660a4d1bf4c913f0335",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65908371_578f10cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-20T09:40:04Z",
      "side": 1,
      "message": "It is not about performance, it is to allocate a heap block with the appropriate alignment requirement to store items of different types. See https://gn-review.googlesource.com/c/gn/+/13563 where this is used by the NestedSet\u003cT\u003e template.",
      "parentUuid": "b9d0cdb1_fa08d846",
      "revId": "a331a36c92c01ae459158660a4d1bf4c913f0335",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4820a0a1_d6e7db95",
        "filename": "src/util/aligned_alloc.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1002158
      },
      "writtenOn": "2022-04-18T20:26:49Z",
      "side": 1,
      "message": "Is this intended for use on Chrome, or for other purposes?\n\nThere is no supported way to build Chrome on a Mac running an OS earlier than macOS 12. At best you could hack some things to build it on macOS 11, but we should put zero engineering effort into toolchain improvements for building Chrome on anything as ancient and unsupported as macOS 10.14.\n\nIf this is not intended for use on Chrome, we should talk, as 10.14 is four years old and no toolset from Apple has supported it for development since January 2020.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "revId": "a331a36c92c01ae459158660a4d1bf4c913f0335",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d11413f3_06567545",
        "filename": "src/util/aligned_alloc.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-19T14:04:46Z",
      "side": 1,
      "message": "Hi Avi. This is clearly not intended for use on Chrome. GN is used by other projects like Fuchsia or Pigweed, as well as other ones outside of Google. Our LUCI recipe, which builds this for all platforms, is using a 10.12 SDK as far as I know, hence the special case here. And I don\u0027t know how to update it anyway.\n\nhttps://gn.googlesource.com/gn/+/refs/heads/main/infra/recipe_modules/macos_sdk/__init__.py#39\n\nNote: Someone suggested we use posix_memalign() instead, which seems to be supported in older releases of OSX. That might work as well as an alternative.",
      "parentUuid": "4820a0a1_d6e7db95",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "revId": "a331a36c92c01ae459158660a4d1bf4c913f0335",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}