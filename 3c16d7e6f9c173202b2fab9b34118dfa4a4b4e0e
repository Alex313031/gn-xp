{
  "comments": [
    {
      "key": {
        "uuid": "75c77cf8_5e33ebf0",
        "filename": "build/gen.py",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2018-07-21T21:30:35Z",
      "side": 1,
      "message": "This check is a little naive. The user could be forcing GCC by setting CC/CXX in the environment.",
      "revId": "3c16d7e6f9c173202b2fab9b34118dfa4a4b4e0e",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69b51c4f_c29dacec",
        "filename": "build/gen.py",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000031
      },
      "writtenOn": "2018-07-22T04:55:53Z",
      "side": 1,
      "message": "Well, I think isn\u0027t more naive than defaulting to an one digit user base compiler ;-). \n\nAnyway if clang is not in path, we can safely assume that we can\u0027t use it to compile GN.",
      "parentUuid": "75c77cf8_5e33ebf0",
      "revId": "3c16d7e6f9c173202b2fab9b34118dfa4a4b4e0e",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "954924a3_f5eaae41",
        "filename": "build/gen.py",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-07-23T21:09:38Z",
      "side": 1,
      "message": "This is not going to work for us, on our bots we always point CC/CXX to the prebuilt Clang that we distribute separately which isn\u0027t in the PATH. With this change, gen.py will always fallback to GCC which is undesirable.",
      "parentUuid": "69b51c4f_c29dacec",
      "revId": "3c16d7e6f9c173202b2fab9b34118dfa4a4b4e0e",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "799cd65d_db56969e",
        "filename": "build/gen.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2018-07-21T21:30:35Z",
      "side": 1,
      "message": "I think it might be nicer to have a separate option to toggle use of libstdc++ on/off. Also, linux packagers probably want to avoid the static linkage.\n\nHowever, I suppose these issues are really separate from the issue this PR addresses.",
      "revId": "3c16d7e6f9c173202b2fab9b34118dfa4a4b4e0e",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "060de116_499fa450",
        "filename": "build/gen.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1000031
      },
      "writtenOn": "2018-07-22T04:55:53Z",
      "side": 1,
      "message": "Here I\u0027m trying to fix compilation with gcc (which doesn\u0027t support \"-stdlib\u003dlibstdc++\"), so, IMHO it must go with gcc switch patch otherwise it won\u0027t compile with static libstdc++.",
      "parentUuid": "799cd65d_db56969e",
      "revId": "3c16d7e6f9c173202b2fab9b34118dfa4a4b4e0e",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d68fba61_b82d1e09",
        "filename": "build/gen.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-07-23T21:09:38Z",
      "side": 1,
      "message": "The `-static-libstdc++` switch should be added separately from `-stdlib\u003dlibstdc++` to avoid the duplication.",
      "parentUuid": "060de116_499fa450",
      "revId": "3c16d7e6f9c173202b2fab9b34118dfa4a4b4e0e",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    }
  ]
}