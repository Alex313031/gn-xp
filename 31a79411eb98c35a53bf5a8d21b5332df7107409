{
  "comments": [
    {
      "key": {
        "uuid": "1afdf720_68ab954b",
        "filename": "src/gn/command_gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 462,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-04-14T00:40:16Z",
      "side": 1,
      "message": "Maybe we should add a disclaimer about how this output is unstable and may change?",
      "revId": "31a79411eb98c35a53bf5a8d21b5332df7107409",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c566e2e6_10994675",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 110,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-04-14T00:40:16Z",
      "side": 1,
      "message": "you can leave out the length, `sysroot_crates[] \u003d {...`",
      "revId": "31a79411eb98c35a53bf5a8d21b5332df7107409",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28d75566_4ef1ce94",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 132,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-04-14T00:40:16Z",
      "side": 1,
      "message": "I wish we could avoid hardcoding these, but it would require adding a toml parser to GN ðŸ˜ž",
      "revId": "31a79411eb98c35a53bf5a8d21b5332df7107409",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5f8bc02_80b71f1a",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-04-14T00:40:16Z",
      "side": 1,
      "message": "ditto",
      "revId": "31a79411eb98c35a53bf5a8d21b5332df7107409",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50cd82cf_6e1c5430",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-04-14T00:40:16Z",
      "side": 1,
      "message": "pass by const ref",
      "revId": "31a79411eb98c35a53bf5a8d21b5332df7107409",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fa6b436_0e27314d",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-04-14T00:40:16Z",
      "side": 1,
      "message": "I just saw something referring to the sysroot location as \"permanently unstable\". This also wouldn\u0027t work if we had a wrapper script in a different dir. Is there a way we can invoke `rustc --print sysroot` to get it instead of hardcoding?",
      "revId": "31a79411eb98c35a53bf5a8d21b5332df7107409",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    }
  ]
}