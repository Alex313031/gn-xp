{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88389923_1c22b730",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-03-25T09:44:51Z",
      "side": 1,
      "message": "I confirm that this CL and its child help fix the Fuchsia build.",
      "revId": "f58760021546ae036f8c243d7266f9558dcdd8fb",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "845861fa_2ac8f4cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1002072
      },
      "writtenOn": "2022-03-25T13:21:22Z",
      "side": 1,
      "message": "Excellent, thank you for that David, and for coming up with the minimal repros!",
      "parentUuid": "88389923_1c22b730",
      "revId": "f58760021546ae036f8c243d7266f9558dcdd8fb",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3700afd5_1bc60690",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-03-25T19:34:31Z",
      "side": 1,
      "message": "I also confirm that larger Fuchsia build configuration work fine with these patches!",
      "parentUuid": "845861fa_2ac8f4cb",
      "revId": "f58760021546ae036f8c243d7266f9558dcdd8fb",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da7d3a41_e7386f32",
        "filename": "src/gn/ninja_rust_binary_target_writer_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 1068,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2022-03-24T22:34:36Z",
      "side": 1,
      "message": "Hm, we have a private dep of a C staticlib in our transitive Rust deps. Whether C staticlib or Rust crate_type \u003d \"staticlib\" I don\u0027t think that makes much sense. Both should hide any Rust code that exists in them and only expose C APIs.\n\nI doubt this is *hurting* anything especially since it\u0027s not listed in `--extern`, but it\u0027s worth pointing out and if there\u0027s a painless fix we should do it. If the fix adds much complexity, it may not be worth it.",
      "revId": "f58760021546ae036f8c243d7266f9558dcdd8fb",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37e8e032_4217a51e",
        "filename": "src/gn/ninja_rust_binary_target_writer_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 1068,
      "author": {
        "id": 1002072
      },
      "writtenOn": "2022-03-25T13:20:56Z",
      "side": 1,
      "message": "My understanding is: In, GN, C static_libs are not \"final\", they are just an archive of the things in that target, they don\u0027t pull in all their deps.\n\nI see in the code that it\u0027s possible to have a \"final\" static lib, some tests set that explicitly, though I don\u0027t know how to make that happen from a GN rule - maybe that\u0027s to support rustc staticlib",
      "parentUuid": "da7d3a41_e7386f32",
      "revId": "f58760021546ae036f8c243d7266f9558dcdd8fb",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fa1eb88_dce6da9f",
        "filename": "src/gn/ninja_rust_binary_target_writer_unittest.cc",
        "patchSetId": 25
      },
      "lineNbr": 1068,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-03-25T19:33:31Z",
      "side": 1,
      "message": "Indeed, a `static_library()` target will generate, by default, a library file (e.g. `libfoo.a`) that only contains the object files for its own `sources`, but not its dependencies.\n\nThis can be changed by using `complete_static_lib \u003d true`, in which case `libfoo.a` file contain the object files for all transitive dependencies as well. This is useful if you want to generate something that can be distributed outside or your build system.\n\nLink-wise, a complete static library is considered \"final\" (meaning its dependencies do not appear on the linker command line of its dependents, just like shared libraries).",
      "parentUuid": "37e8e032_4217a51e",
      "revId": "f58760021546ae036f8c243d7266f9558dcdd8fb",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}