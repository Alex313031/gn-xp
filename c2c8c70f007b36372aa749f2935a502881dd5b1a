{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "517df3ba_1f6cda88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002152
      },
      "writtenOn": "2022-04-14T17:56:38Z",
      "side": 1,
      "message": "I\u0027m fairly sure this is the wrong fix, but I ran into a DCHECK when doing some moderately funky stuff with the mac_framework_bundle target while trying to get resource allowlist generation to work on macOS. Specifically: \n\n$ ~/work/gn/out/gn gen ../out/testing\n[0x10cbbf600:0413/105600.162336:FATAL:ninja_build_writer.cc(156)] Check failed: matches.size() \u003e\u003d 2.\n\nzsh: abort      ~/work/gn/out/gn gen ../out/testing\n\nand with a release build, this failure:\n\nERROR at //build/config/mac/rules.gni:310:3: Duplicate output file.\n  create_bundle(_framework_target) {\n  ^---------------------------------\nTwo or more targets generate the same output:\n  Chromium Framework.framework/Versions/102.0.4971.0/Libraries/libEGL.dylib\n\nThis is can often be fixed by changing one of the target names, or by\nsetting an output_name on one of them.\n\nCollisions:\n  //chrome:chrome_framework(//build/toolchain/mac:clang_x64)\n\nwhich is weird because the target is colliding with itself!\n\nThis change seems to improve matters, but it feels wrong... maybe one of you can help me find the right change?",
      "revId": "c2c8c70f007b36372aa749f2935a502881dd5b1a",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90856f07_7a0bfa2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002152
      },
      "writtenOn": "2022-04-14T22:13:53Z",
      "side": 1,
      "message": "forgot to add reviewers ðŸ˜…",
      "revId": "c2c8c70f007b36372aa749f2935a502881dd5b1a",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9d4eb83_088d3b9a",
        "filename": "src/gn/target.cc",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-04-18T19:16:48Z",
      "side": 1,
      "message": "Instead of this assertion, is it possible to express the condition that caused this in a unit test? If you just need to add a specific dependency or something you may be able to find an existing unit test to piggyback onto.",
      "revId": "c2c8c70f007b36372aa749f2935a502881dd5b1a",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2c8c70f007b36372aa749f2935a502881dd5b1a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}