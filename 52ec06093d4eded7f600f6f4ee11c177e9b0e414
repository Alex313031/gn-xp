{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7515dcf3_64c4adac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-22T07:28:40Z",
      "side": 1,
      "message": "Note that rpmalloc uses `-Weverything` in its configure script, and this has been the source of several issues with recent Clang upstream rolls that broke the GN and Ninja LUCI recipes (which now build and link rpmalloc into the binaries for better performance). See [1] and [2] for examples.\n\nI fear this is going to carry the same set of problems in the long run, where a new Clang introduces a new warning and breaks the GN recipes.appropriate, because the definition of `-Weverything` is not fixed, and even includes warnings that are not relevant to the current version of `-std\u003dXXXX` being used :-(\n\nCan we add a new `-Wsomething` to take care of the original issue (misnamed macros?)\n\n[1] https://gn-review.googlesource.com/c/gn/+/13140\n[2] https://gn-review.googlesource.com/c/gn/+/13581",
      "revId": "52ec06093d4eded7f600f6f4ee11c177e9b0e414",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0414bec3_1c3f1b91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2022-04-22T13:30:56Z",
      "side": 1,
      "message": "BTW, even clang developers recommends not using `-Weverything`:\n\nhttps://quuxplusone.github.io/blog/2018/12/06/dont-use-weverything/",
      "revId": "52ec06093d4eded7f600f6f4ee11c177e9b0e414",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7990c516_3715ad3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-22T14:14:41Z",
      "side": 1,
      "message": "Wow, fantastic link, thanks for sharing :)",
      "parentUuid": "0414bec3_1c3f1b91",
      "revId": "52ec06093d4eded7f600f6f4ee11c177e9b0e414",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca0e2604_24962be3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-25T08:25:07Z",
      "side": 1,
      "message": "I see, I\u0027ll enable some warnings separately then.",
      "parentUuid": "7990c516_3715ad3b",
      "revId": "52ec06093d4eded7f600f6f4ee11c177e9b0e414",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d619d2f_4e14a981",
        "filename": "build/gen.py",
        "patchSetId": 7
      },
      "lineNbr": 441,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2022-04-22T13:28:49Z",
      "side": 1,
      "message": "I think we should *not* use `-Weverything` as it enable warnings that are incompatible with the standard. Instead we should add the warning that we think are not in `-Wall` nor `-Wextra` that we want.\n\nFor the missing macro, I think we should add `-Wundef` as this is the error that is reported when building a test file.\n\n  $ cat foo.c\n  #if FOO\n  #error FOO\n  #endif\n  $ clang -c -o foo.o foo.c -Werror -Wextra -Wall -Weverything\n  error: include location \u0027/usr/local/include\u0027 is unsafe for cross-compilation [-Werror,-Wpoison-system-directories]\n  foo.c:1:5: error: \u0027FOO\u0027 is not defined, evaluates to 0 [-Werror,-Wundef]\n  #if FOO\n      ^\n  2 errors generated.\n  $ clang -c -o foo.o foo.c -Werror -Wextra -Wall -Wundef\n  foo.c:1:5: error: \u0027FOO\u0027 is not defined, evaluates to 0 [-Werror,-Wundef]\n  #if FOO\n      ^\n  1 error generated.\n\nMy example also show why `-Weverything` is problematic. It has enabled `-Wpoison-system-directories` which does not make sense if I don\u0027t cross-compile.",
      "revId": "52ec06093d4eded7f600f6f4ee11c177e9b0e414",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "52ec06093d4eded7f600f6f4ee11c177e9b0e414",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}