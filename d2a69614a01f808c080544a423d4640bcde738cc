{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ccf618dc_f49b704c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 4040239
      },
      "writtenOn": "2025-05-22T09:27:18Z",
      "side": 1,
      "message": "Thanks for the review and comments. PTAL.",
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27c1bfab_21cdc6a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 4040239
      },
      "writtenOn": "2025-05-22T12:36:46Z",
      "side": 1,
      "message": "Hi @sdefresne@chromium.org, as you suggested this follow-up, I\u0027d like you to take a look as well. If this looks good to you, may I ask you to submit this CL?",
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d316d6d_e711ce5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2025-05-26T13:20:40Z",
      "side": 1,
      "message": "lgtm with comment",
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0806ea5a_23db560e",
        "filename": "src/gn/xcode_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2025-05-26T13:20:40Z",
      "side": 1,
      "message": "Can you write it like this?\n\n```\nstd::optional\u003cTargetXcodePlatformType\u003e GetTargetXcodePlatform(\n    const Args\u0026 args,\n    const ParseNode* node,\n    Err* err) {\n  const Value* target_xcode_platform_value \u003d\n      args.GetArgOverride(variables::kTargetXcodePlatform);\n  if (!target_xcode_platform_value) {\n    return WRITER_TARGET_XCODE_PLATFORM_IPHONEOS;\n  }\n  \n  if (target_xcode_platform_value-\u003etype() !\u003d Value::STRING) {\n    *err \u003d Err(node, \"target_xcode_platform value should be a string\",\n        target_xcode_platform_value-\u003eToString(false));\n    return std::nullopt;\n  }\n  \n  const std::string\u0026 target_xcode_platform \u003d\n      target_xcode_platform_value-\u003estring_value();\n\n  if (target_xcode_platform \u003d\u003d \"tvos\") {\n    return WRITER_TARGET_XCODE_PLATFORM_TVOS;\n  }\n\n  if (target_xcode_platform \u003d\u003d \"iphoneos\") {\n    return WRITER_TARGET_XCODE_PLATFORM_IPHONEOS;\n  }\n  \n  *err \u003d Err(node, \"Unknown target_xcode_platform value\",\n      target_xcode_platform);\n  return std::nullopt;\n}\n```\n\nHaving the code less nested makes it easier to understand IMO.",
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "619a1a08_979244f3",
        "filename": "src/gn/xcode_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 4040239
      },
      "writtenOn": "2025-05-27T06:10:29Z",
      "side": 1,
      "message": "Sure! Thanks! Done.",
      "parentUuid": "0806ea5a_23db560e",
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "853ef848_4705302f",
        "filename": "src/gn/xcode_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2025-05-22T09:29:25Z",
      "side": 1,
      "message": "nit: the nested ifs make this difficult to read. Consider flattening the error exit cases for readability. However, I am marking this as resolved as this is good enough for me :)",
      "fixSuggestions": [
        {
          "fixId": "c29fbc21_eb708bf2",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/gn/xcode_writer.cc",
              "range": {
                "startLine": 95,
                "startChar": 0,
                "endLine": 105,
                "endChar": 0
              },
              "replacement": "  if (!target_xcode_platform_value) {\n    return WRITER_TARGET_XCODE_PLATFORM_IPHONEOS;\n  }\n  if (target_xcode_platform_value-\u003etype() !\u003d Value::STRING) {\n"
            },
            {
              "path": "src/gn/xcode_writer.cc",
              "range": {
                "startLine": 109,
                "startChar": 0,
                "endLine": 110,
                "endChar": 0
              },
              "replacement": "  if (target_xcode_platform_value-\u003estring_value() \u003d\u003d \"tvos\") {\n    return WRITER_TARGET_XCODE_PLATFORM_TVOS;\n  }\n  if (target_xcode_platform_value-\u003estring_value() \u003d\u003d \"iphoneos\") {\n    return WRITER_TARGET_XCODE_PLATFORM_IPHONEOS;\n  }\n  *err \u003d Err(node, \"Unknown target_xcode_platform value\",\n      target_xcode_platform_value-\u003estring_value());\n  return std::nullopt;\n"
            }
          ]
        }
      ],
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3246842d_36dd1704",
        "filename": "src/gn/xcode_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 4040239
      },
      "writtenOn": "2025-05-22T12:36:46Z",
      "side": 1,
      "message": "Thanks for understanding.",
      "parentUuid": "853ef848_4705302f",
      "revId": "d2a69614a01f808c080544a423d4640bcde738cc",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}