{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aa1821cf_16dc51ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-04-15T23:33:12Z",
      "side": 1,
      "message": "I thought this was one of the things that I was going to look at next week and I\u0027m surprised such a large patch for such a fundamental change was landed without waiting for me, especially after having the chat conversation yesterday where we talked about how I would look at your patches next week.\n\nI\u0027d like to step back because I don\u0027t understand the big picture about the direction you\u0027re going. I\u0027ll send an email to the mailing list to discuss.",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6275acf1_0384889e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-19T14:33:32Z",
      "side": 1,
      "message": "I have posted an RFC to gn-dev [1] that explains the big picture. I hope it will help understand the ideas behind these changes.\n\nNote that so far only support classes have been added in the previous submits. There is no GN change at runtime so far, they all happen in the CLs above this one.\n\n[1] https://groups.google.com/a/chromium.org/g/gn-dev/c/GIDBLOOd9as/m/p4UHiLk5AgAJ",
      "parentUuid": "aa1821cf_16dc51ff",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "173c1af9_69ea226e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-04-27T19:27:58Z",
      "side": 1,
      "message": "In the other patch I said I think the ",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbb67a2_f142d097",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-20T08:15:26Z",
      "side": 1,
      "message": "If this is necessary, DCHECK needs to be removed?",
      "range": {
        "startLine": 112,
        "startChar": 1,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b2011b7_9d29b72d",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-26T14:14:07Z",
      "side": 1,
      "message": "Indeed, fixed in patchset 6 of https://gn-review.googlesource.com/c/gn/+/13625",
      "parentUuid": "4cbb67a2_f142d097",
      "range": {
        "startLine": 112,
        "startChar": 1,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "893878af_8f3fbcce",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-20T08:15:26Z",
      "side": 1,
      "message": "better to move this to the last line of this function for consistency?",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c775df08_93cf7a30",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-26T14:14:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "893878af_8f3fbcce",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "858f1448_3fd7aa70",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 340,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-20T08:15:26Z",
      "side": 1,
      "message": "ditto",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "999052e3_b7fc9b7a",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 420,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-04-27T19:27:58Z",
      "side": 1,
      "message": "As I mentioned in the other patch, I don\u0027t see an advantage in returning the \"View\" rather than just returning a const reference. I think the reference makes the memory ownership a little clearer.",
      "range": {
        "startLine": 420,
        "startChar": 0,
        "endLine": 420,
        "endChar": 30
      },
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30ea9b07_ae8f7dd1",
        "filename": "src/gn/resolved_target_data.cc",
        "patchSetId": 6
      },
      "lineNbr": 420,
      "author": {
        "id": 1002072
      },
      "writtenOn": "2022-04-27T19:33:32Z",
      "side": 1,
      "message": "The difference is in how the caller wants to use it, IIUC. C++ references do not behave like objects themselves. Copying a ImmutableVector\u0026 makes a copy of the whole vector. Assigning to an ImmutableVector\u0026 assigns to the vector itself. \n\nWhereas moving, copying, assigning an ImmutableVectorView will only act on the view.\n\nI would say that a \"View\" is a pretty common name for a non-owning type fwiw. I don\u0027t have any skin in this game here, but I can definitely imagine uses for a non-owning smart pointer (which is what this is more or less) which currently C++ lacks, unless you use a nullable type.",
      "parentUuid": "999052e3_b7fc9b7a",
      "range": {
        "startLine": 420,
        "startChar": 0,
        "endLine": 420,
        "endChar": 30
      },
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a34f588_f999b5d8",
        "filename": "src/gn/resolved_target_deps.h",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-20T08:15:26Z",
      "side": 1,
      "message": "fix include order?",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e262021_ddffb7f2",
        "filename": "src/gn/resolved_target_deps.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-26T07:05:56Z",
      "side": 1,
      "message": "strange format/indent?",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db37b12a_1b868fb9",
        "filename": "src/gn/resolved_target_deps.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2022-04-26T14:14:07Z",
      "side": 1,
      "message": "Indeed, that\u0027s what `clang-format` does on my machine, I\u0027ve stopped fighting against the tool and just live with this. The alternative is to add an ugly `// clang-format off`.",
      "parentUuid": "0e262021_ddffb7f2",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04d2e8f1_dbb31e83",
        "filename": "src/gn/resolved_target_deps.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-04-27T06:37:19Z",
      "side": 1,
      "message": "Oh, I see. Filed https://crbug.com/1320172",
      "parentUuid": "db37b12a_1b868fb9",
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "360f9a10_e6bd1d9f",
        "filename": "src/gn/target_public_pair.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-04-27T19:27:58Z",
      "side": 1,
      "message": "As I mentioned in the other patch that I think TaggedPointer isn\u0027t worth the confusion. Can you just make this \"const Target*\" and \"bool\" members?",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 39
      },
      "revId": "1cdd270be9803dbfcdd0343f6104ad4dc30c38ce",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}