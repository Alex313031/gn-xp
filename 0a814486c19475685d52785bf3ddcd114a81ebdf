{
  "comments": [
    {
      "key": {
        "uuid": "741e52a6_0440f94a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-07-23T20:22:56Z",
      "side": 1,
      "message": "Just first pass, I\u0027ll need to do another pass when I understand the deps stuff better.",
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10b13603_bc7723e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-24T09:51:25Z",
      "side": 1,
      "message": "Thank you for the first look.\n\nJust replying to the comments.\n\nI think we should resolve the question before I make further changes to the CL.",
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83e4371e_1142b65f",
        "filename": "src/gn/c_tool.h",
        "patchSetId": 17
      },
      "lineNbr": 37,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-07-23T20:22:56Z",
      "side": 1,
      "message": "\"multi\" is pretty mysterious, while \"GCC\" and \"MSVC\" are pretty self-explanatory. Can you document this here?",
      "range": {
        "startLine": 37,
        "startChar": 49,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0fded5d_97bbf547",
        "filename": "src/gn/c_tool.h",
        "patchSetId": 17
      },
      "lineNbr": 37,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-24T09:51:25Z",
      "side": 1,
      "message": "This is a workaround to use \"depfile\" without \"gn\" writing also \"deps \u003d gcc\". This is required to be able to use \"depfile\" with a target that generates multiple outputs when using old version of ninja.\n\nIn ninja, \"deps \u003d gcc\" enables an optimisation that was not implemented for target generating multiple outputs, so with version of ninja older than 1.9.0, ninja writes an error if using \"depfile\" and \"deps \u003d gcc\" for a target generating multiple output.\n\nMoreover, the \"deps \u003d gcc\" parser was still not parsing correctly depfile until version 1.10.0 when the target generates multiple outputs (https://github.com/ninja-build/ninja/issues/1809).\n\nSo, this settings is to be able to generate the following:\n\n  rule swift\n    command \u003d ...\n    depfile \u003d ...\n\n\ninstead of\n\n  rule swift\n    command \u003d ...\n    depfile \u003d ...\n    deps \u003d gcc\n\nThis is required as swift target generates M outputs from N inputs in the general case (when whole module optimization is disabled and the module is composed of multiple files).\n\nSo I don\u0027t really know which name I could use here. The most clear would be \"DEPS_WORKAROUND_FOR_OLDER_NINJA_WHEN_TARGET_HAS_MULTIPLE_OUTPUT\" but that is quite long.\n\nAlso, I\u0027d like to use the support for Swift in Chrome on iOS (to implements iOS 14 widgets that have to be written in SwiftUI), so I cannot say the support is only working with ninja 1.10.0 or older as Chromium is blocked on an old version of ninja (due to https://bugs.chromium.org/p/chromium/issues/detail?id\u003d931218).\n\nBefore documenting the workaround, I\u0027d like to know if you would be okay with it. The other option is to use a some dummy rules that do nothing if ninja version is unknown or older than 1.10.0.",
      "parentUuid": "83e4371e_1142b65f",
      "range": {
        "startLine": 37,
        "startChar": 49,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a0acd9d_b5bae7a0",
        "filename": "src/gn/c_tool.h",
        "patchSetId": 17
      },
      "lineNbr": 37,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-07-28T17:42:44Z",
      "side": 1,
      "message": "Thanks. It\u0027s been a year and a half for that Ninja bug. It\u0027s not clear to me looking what\u0027s the current problem. Can we just push on that?\n\nA few months ago we had to add some other GN workarounds for Chrome\u0027s old Ninja and I\u0027m not enthusiastic about adding even more.",
      "parentUuid": "e0fded5d_97bbf547",
      "range": {
        "startLine": 37,
        "startChar": 49,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6146a4c_51a5d26a",
        "filename": "src/gn/c_tool.h",
        "patchSetId": 17
      },
      "lineNbr": 37,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-29T08:58:39Z",
      "side": 1,
      "message": "The reason chromium cannot upgrade is that ninja 1.9.0+ uses the full precision of the file timestamp when available (up to nanoseconds), but some of the tools used to build chromium (most notably python2 `shutil.copyfile` and `cp -a` on macOS) lose some of the timestamp precision (as far as I can tell, truncates at microseconds).\n\nI think the \"fix\" is converting chromium to use python3, stop using `cp` to copy file (on macOS), or change ninja to use only microseconds when comparing timestamps. I\u0027ve been trying to convince my management chain that we should invest effort in migrating to python3, but was not allowed. Changing precision in ninja is probably not going to fly.\n\nDetails are in https://github.com/ninja-build/ninja/issues/1554.\n\nThus, I think I\u0027ll have to write a workaround for ninja anyway if I detect that the version of ninja \u003c 1.10.0 (which is the one containing the fix for depfile).\n\nMy other options for a workaround is to generate ninja files that look like the following (which I think should work but adds lots of \"stamp\" targets that may or not slow the build):\n\n  rule swift\n    command \u003d ...\n    depfile \u003d ...\n    deps \u003d gcc\n\n  obj/Foo/Foo.swiftmodule: swift ../../Foo/file1.swift ../../Foo/file2.swift\n\n  obj/Foo/foo/file1.o: stamp obj/Foo/Foo.swiftmodule\n  obj/Foo/foo/file2.o: stamp obj/Foo/Foo.swiftmodule\n\ninstead of (not the absence of \"deps\")\n\n  rule swift\n    command \u003d ...\n    depfile \u003d ...\n\n  obj/Foo/Foo.swiftmodule obj/Foo/foo/file1.o obj/Foo/foo/file2.o: swift ../../Foo/file1.swift ../../Foo/file2.swift",
      "parentUuid": "6a0acd9d_b5bae7a0",
      "range": {
        "startLine": 37,
        "startChar": 49,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6b02f5d_80763ed9",
        "filename": "src/gn/c_tool.h",
        "patchSetId": 17
      },
      "lineNbr": 37,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-30T10:25:16Z",
      "side": 1,
      "message": "I\u0027ve removed enum, and instead added a check for the tool and the version of ninja in ninja_toolchain_writer.cc. Would this be acceptable?",
      "parentUuid": "f6146a4c_51a5d26a",
      "range": {
        "startLine": 37,
        "startChar": 49,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab7868e7_3dd742d8",
        "filename": "src/gn/function_toolchain.cc",
        "patchSetId": 17
      },
      "lineNbr": 371,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-07-23T20:22:56Z",
      "side": 1,
      "message": "Looks like this needs to be expanded based on your addition.",
      "range": {
        "startLine": 371,
        "startChar": 36,
        "endLine": 371,
        "endChar": 69
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5ac14d0_e27a5656",
        "filename": "src/gn/function_toolchain.cc",
        "patchSetId": 17
      },
      "lineNbr": 371,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-24T09:51:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ab7868e7_3dd742d8",
      "range": {
        "startLine": 371,
        "startChar": 36,
        "endLine": 371,
        "endChar": 69
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "879e89b0_4e7fe2ad",
        "filename": "src/gn/ninja_toolchain_writer.cc",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-07-23T20:22:56Z",
      "side": 1,
      "message": "Since I don\u0027t understand what multi deps output is, I\u0027m also confused why you need to add stuff to rust, and what effect this has when we\u0027re not telling ninja about the depfile.",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e64ecef3_702366b5",
        "filename": "src/gn/ninja_toolchain_writer.cc",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-24T09:51:25Z",
      "side": 1,
      "message": "This is a workaround for a bug in ninja. See my explanation in the other comment. Basically, I want to have a way to tell ninja there is a \"depfile\" but not specify a \"deps\" format.",
      "parentUuid": "879e89b0_4e7fe2ad",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 59
      },
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82306a53_cd07ab3e",
        "filename": "src/gn/swift_variables.h",
        "patchSetId": 17
      },
      "lineNbr": 12,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-07-23T20:22:56Z",
      "side": 1,
      "message": "I think we can omit this separator.",
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a40c1706_d3b6bc48",
        "filename": "src/gn/swift_variables.h",
        "patchSetId": 17
      },
      "lineNbr": 12,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2020-07-24T09:51:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "82306a53_cd07ab3e",
      "revId": "0a814486c19475685d52785bf3ddcd114a81ebdf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    }
  ]
}