{
  "comments": [
    {
      "key": {
        "uuid": "7de987e5_fbf57a46",
        "filename": "src/gn/loader.cc",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-27T17:10:11Z",
      "side": 1,
      "message": "I\u0027d just leave this off.",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2957ffdb_2dc36d39",
        "filename": "src/gn/loader.cc",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T17:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7de987e5_fbf57a46",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34b2ccff_dc016e9c",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-27T17:10:11Z",
      "side": 1,
      "message": "\"If set to a non-empty string, this is added to the name of all build files to load.\"\n\n(based on my comment below about allowing the empty case)",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3946ac3b_8dc3692c",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T17:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34b2ccff_dc016e9c",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8eed9988_215c8180",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-27T17:10:11Z",
      "side": 1,
      "message": "I\u0027d like to add a thing here about what this is actually for. Maybe like:\n\n  This is intended to be used during migrations or other situations where there are two\n  independent GN builds in the same directories.",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87c9b9e0_c0aa4489",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T17:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8eed9988_215c8180",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d95aa04_8c499768",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-27T17:10:11Z",
      "side": 1,
      "message": "I\u0027d just delete this line, I think it\u0027s OK to have it default to empty. It should be just as obvious if you screw up because the file name will still be invalid.",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "034db67e_50c9b22e",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T17:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d95aa04_8c499768",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d9d8840_5aacc40e",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 801,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-27T17:10:11Z",
      "side": 1,
      "message": "I think it\u0027s OK to have empty give the default behavior and delete this check. Probably in this case it will never come up, but in general we should have the default behavior be settable in a variable because for some conditional cases it can be hard to express \"don\u0027t set this variable\".",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6caa4a32_1eb6960e",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 801,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T17:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d9d8840_5aacc40e",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b2ef264_d4ae6bac",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 804,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-27T17:10:11Z",
      "side": 1,
      "message": "This loop can be replaced with:\n\n  if (extension.find_first_of(base::FilePath::kSeparators) !\u003d std::string::npos) {\n     Err(...)\n  }",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ea490a_b9706050",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 804,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T17:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b2ef264_d4ae6bac",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb80e14_8f4542dc",
        "filename": "src/gn/setup.cc",
        "patchSetId": 3
      },
      "lineNbr": 804,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-27T18:21:25Z",
      "side": 1,
      "message": "This is failing in Windows because CharType is char16_t and std::string\u0027s find_first_of cannot handle that type. Any preference on how to handle this case? I could for example transform extension into its u16string counterpart before performing the lookup on Windows.",
      "parentUuid": "84ea490a_b9706050",
      "revId": "eabdce2bb6a4ad3c1667771fbc1df8ab447e8a04",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    }
  ]
}