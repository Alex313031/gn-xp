{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "35b56382_b9a46ff4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-05-14T04:20:43Z",
      "side": 1,
      "message": "Thanks for the updates and sorry for the headaches. For the big picture, I\u0027m trying to see if we can get the complexity down to the point where I think this is worth having in the tree. From my perspective zOS is an extremely obscure platform and so far it is adding more platform-specific ifdefs than anything but Windows.\n\nThe CCSID calls should just be removed from this patch so we don\u0027t check them in at all. We can re-evaluate when this patch then becomes smaller. But I\u0027m also concerned about the lack of thread_local support as I discuss in the comment below, and adding a whole implementation of thread_local for this one platform again adds complexity to this patch where I\u0027m not sure it\u0027s worth it. Maybe the compiler team can implement this first?",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9185b096_6e01a082",
        "filename": "src/gn/exec_process.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-05-14T04:20:43Z",
      "side": 1,
      "message": "If we need this include, just make it unconditional and move up to the top group since it will work on all platforms.",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8382ba4_1196f375",
        "filename": "src/gn/exec_process.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000602
      },
      "writtenOn": "2021-05-14T15:06:05Z",
      "side": 1,
      "message": "Thanks, I removed the ifdef and moved sys/time.h to under non-OS_WIN group, please see patch https://gn-review.googlesource.com/c/gn/+/11600/2",
      "parentUuid": "9185b096_6e01a082",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9886da0_dda04def",
        "filename": "src/gn/exec_process.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-05-14T22:49:00Z",
      "side": 1,
      "message": "We should just apply those changes to this patch so we only have one patch going.",
      "parentUuid": "d8382ba4_1196f375",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c068ca06_7ab439e8",
        "filename": "src/gn/ninja_rust_binary_target_writer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 813,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-05-14T04:20:43Z",
      "side": 1,
      "message": "Since the zos version of the code works either way, I think we can just use it and remove the ifdef.",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47956b4d_e50b775a",
        "filename": "src/gn/ninja_rust_binary_target_writer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 813,
      "author": {
        "id": 1000602
      },
      "writtenOn": "2021-05-14T15:06:55Z",
      "side": 1,
      "message": "Done, in https://gn-review.googlesource.com/c/gn/+/11600/2",
      "parentUuid": "c068ca06_7ab439e8",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e0413c7_b62c4549",
        "filename": "src/gn/string_atom.cc",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-05-14T04:20:43Z",
      "side": 1,
      "message": "This change is not safe and will cause data corruption and probably crashes.\n\nSome minor compiler workarounds are OK with me (the pair emplace change you made is OK with me). But we require a generally compliant C++17 compiler and I don\u0027t want to accumulate workarounds for such fundamental things as thread_local, especially as in this case when the workarounds are relatively complicated.\n\nGN will not be usable on zos with the current code so I\u0027m reluctant to land anything in this state.",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a2b1c44_e98efa6a",
        "filename": "src/gn/string_atom.cc",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1000602
      },
      "writtenOn": "2021-05-14T15:15:56Z",
      "side": 1,
      "message": "I removed the ifdef for thread_local, and worked around it in build/gen.py (https://gn-review.googlesource.com/c/gn/+/11600/2) to reduce the clutter.\n\nAbout \"GN will not be usable on zos with the current code\": in all my runs of \u0027gn gen\u0027 to build V8 (the reason for porting GN to z/OS, as we are porting standalone V8), gn never crashed in any of my many runs, including running out/gn_unittests. Yes it could be by luck, but we have been able to use this ported GN successfully on z/OS - otherwise I wouldn\u0027t checkin code that crashes :)",
      "parentUuid": "0e0413c7_b62c4549",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd2e3144_90c6c9d7",
        "filename": "src/gn/string_atom.cc",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-05-14T22:49:00Z",
      "side": 1,
      "message": "I think you\u0027re getting lucky because (if I recall) V8 only has the one build file. But this is being called from multiple threads with no locking, so any builds files are executed in parallel (the normal case for almost all of the projects that use GN), I believe this will crash fairly quickly.",
      "parentUuid": "3a2b1c44_e98efa6a",
      "revId": "122aaef10b3812c8772f553e77183e6f719b9dd0",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}