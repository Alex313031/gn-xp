{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8f36e86e_4fcfd636",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000587
      },
      "writtenOn": "2020-11-01T03:46:02Z",
      "side": 1,
      "message": "Should we be able to make this happen for automatic re-gen?",
      "revId": "29b1326b19455f3a12b04b934882e5e0341281cf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4a8af74_7246d7bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000633
      },
      "writtenOn": "2020-11-02T16:59:50Z",
      "side": 1,
      "message": "Yes, I think so. We could add the --clean-stale flag to the build.ninja command. We\u0027d need to think through which ninja-executable to use, so we don\u0027t have a mismatch between the ninja that invoked the re-gen and the ninja that is used for cleaning.\n\nbrettw@ - WDYT?\n\nThere\u0027s also some relevant discussion on a previous CL from phosek@: https://gn-review.googlesource.com/c/gn/+/9960",
      "parentUuid": "8f36e86e_4fcfd636",
      "revId": "29b1326b19455f3a12b04b934882e5e0341281cf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1aeca4f4_6283825f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-11-05T03:43:37Z",
      "side": 1,
      "message": "I\u0027m paranoid about deleting stuff unless explicitly asked. I also wonder how much performance overhead this will add to ninja incremental rebuilds, which is the main number we should be watching. So I would lean against adding that to the Ninja command line.",
      "parentUuid": "a4a8af74_7246d7bb",
      "revId": "29b1326b19455f3a12b04b934882e5e0341281cf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c81b28ce_05789ca8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000587
      },
      "writtenOn": "2020-11-05T16:05:15Z",
      "side": 1,
      "message": "What\u0027s more important, correctness or performance? Can we have an opt-in in the dotfile?\n\nDoing this automatically reduces the support burden. I am still getting questions about an instance of stale files breaking the build 2 weeks after the change landed (in a non-chromium project).",
      "parentUuid": "1aeca4f4_6283825f",
      "revId": "29b1326b19455f3a12b04b934882e5e0341281cf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f41f6ce1_3db8eeda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000587
      },
      "writtenOn": "2020-11-05T16:20:09Z",
      "side": 1,
      "message": "BTW, this is a much worse issue for projects that can\u0027t reduce their #include paths to the list\n\n  //\n  $root_gen_dir\n\nin that order. Chromium incremental builds work as well as they do in part because rooting all the #includes from the same directory mitigates the issue.\n\nIn cast, I ended up landing an exec_script() to delete the files at gen time.",
      "parentUuid": "c81b28ce_05789ca8",
      "revId": "29b1326b19455f3a12b04b934882e5e0341281cf",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}