{
  "comments": [
    {
      "key": {
        "uuid": "8fe64004_608afa0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-17T23:17:46Z",
      "side": 1,
      "message": "I think the fix ought to happen in RA. As I understand it, feature flags can be booleans (and maybe numbers??) instead of string literals, so you need quotes to differentiate.",
      "revId": "fd31d0ac1f682b3fff80bff9be6e3f724fdfe6db",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1ff03f2_933716c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2020-07-20T14:07:09Z",
      "side": 1,
      "message": "I tried looking for the docs on this, but I can\u0027t find anything that says features can be booleans or numbers. This is what the reference says, and it seems limited to strings: https://doc.rust-lang.org/reference/conditional-compilation.html . Internally, RA only seems to care about strings.",
      "parentUuid": "8fe64004_608afa0c",
      "revId": "fd31d0ac1f682b3fff80bff9be6e3f724fdfe6db",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e52c21ad_13a28559",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-20T22:25:22Z",
      "side": 1,
      "message": "per matklad@, it was an accidental change, but one that they would like to keep.  I\u0027ll compare what\u0027s in rust-project.json, what RA is doing, and what\u0027s in Cargo, and try to recommend a common syntax for this.",
      "parentUuid": "b1ff03f2_933716c4",
      "revId": "fd31d0ac1f682b3fff80bff9be6e3f724fdfe6db",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "665d6dbe_5d2e7f86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-22T00:39:07Z",
      "side": 1,
      "message": "Ok, per our discussion I\u0027m fine with merging this. I\u0027m slightly worried about RA having to break backward compatibility in the future if rustc decides to accept things besides strings as config values, but not that worried (especially since this format is unstable).",
      "revId": "fd31d0ac1f682b3fff80bff9be6e3f724fdfe6db",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03849050_08c6c417",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-17T23:17:46Z",
      "side": 1,
      "message": "Conflict markers",
      "revId": "fd31d0ac1f682b3fff80bff9be6e3f724fdfe6db",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bab64e00_7cc417a7",
        "filename": "src/gn/rust_project_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-07-22T00:39:07Z",
      "side": 1,
      "message": "please fix ;)",
      "parentUuid": "03849050_08c6c417",
      "revId": "fd31d0ac1f682b3fff80bff9be6e3f724fdfe6db",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    }
  ]
}