{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c94bd12f_5b075c99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-05-31T23:51:20Z",
      "side": 1,
      "message": "I\u0027m not sure if people could be relying on `print()` statements going to stdout when running `gn desc ... --format\u003djson`, but it seems exceptionally unlikely.\n\nAnd this allows for warning statements that are printed to not break the ability to use `gn desc ... --format\u003djson` with other tools.",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea34671b_df75f50e",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-06-01T05:56:33Z",
      "side": 1,
      "message": "Can you use a dedicated C++ class (here or in the BuildSetting implementation) to ensure that the print callback is restored to its previous value on scope exit? In particular because I still maintain my own \"query persistent server\" mode where you can run multiple GN commands from the same in-memory graph.\n\nAlso what do you think about _not_ printing anything in this case instead?\n\nThis type of change would probably need to be clearly documented too.",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "258e99db_6d76b60d",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-06-01T14:44:18Z",
      "side": 1,
      "message": "A class that removes the callback on destruction?\n\nAnd not printing is possibly a better option, I\u0027ve always found it confusing that GN output print() statements during `desc`.",
      "parentUuid": "ea34671b_df75f50e",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab0f15d2_cb231f2f",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-06-01T14:53:44Z",
      "side": 1,
      "message": "Or restores it to whatever was the previous value (e.g. with a new method like BuildSettings::swap_print_callback()).\n\nI agree that print() during `desc` (or any other type of query like `path` or `refs`) is highly undesirable, and I would be happy to see them go. I am curious about Brett\u0027s opinion on the subject :-)",
      "parentUuid": "258e99db_6d76b60d",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3f7501_42b39ed4",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2023-06-01T16:20:08Z",
      "side": 1,
      "message": "I agree it\u0027s better to not print during `desc`",
      "parentUuid": "ab0f15d2_cb231f2f",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3f8f25_d4b2159a",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-06-01T18:15:52Z",
      "side": 1,
      "message": "ack, will remove the printing entirely.\n\n@digit - I just found your \"query persistent server\" CL and I think this won\u0027t interfere, because that wouldn\u0027t be very compatible with the `--format\u003djson` argument.\n\nToday, `set_print_callback()` is only called in one place, a test (this CL makes it two places).\n\nBut I\u0027ll do an RAII object for the callback, that shouldn\u0027t be very complicated, and then in the future it won\u0027t interfere with other commands.",
      "parentUuid": "9b3f7501_42b39ed4",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "397df36a_358a34ab",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-05-29T19:49:34Z",
      "side": 1,
      "message": "I have this drafted up, but how does the query persistent server mode work with the `desc` command which is creating it\u0027s own (disposable) `Setup` object (line 633)?",
      "parentUuid": "8f3f8f25_d4b2159a",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c31d6320_65b27578",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2024-05-29T20:53:48Z",
      "side": 1,
      "message": "For each GN command, there is a new intermediate RunXXXX() function that takes a `Setup*` pointer as input, and that\u0027s what the query server calls with its own Setup object.\n\nFull details at https://gn-review.googlesource.com/c/gn/+/12882",
      "parentUuid": "397df36a_358a34ab",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b7b5c9_489e665e",
        "filename": "src/gn/command_desc.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-05-29T21:05:29Z",
      "side": 1,
      "message": "Looking at that CL, the code that I\u0027m adding here would need to be in the wrapper function you added at line 707 in https://gn-review.googlesource.com/c/gn/+/12882/7/src/gn/command_desc.cc",
      "parentUuid": "c31d6320_65b27578",
      "revId": "b841fcb7d42d39c042c07ec630e04230d2cfdf06",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}