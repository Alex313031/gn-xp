{
  "comments": [
    {
      "key": {
        "uuid": "f52cfc06_6ddcea48",
        "filename": "tools/gn/metadata.cc",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2018-11-27T20:25:44Z",
      "side": 1,
      "message": "see comment below.",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730c11e5_7e0baea0",
        "filename": "tools/gn/metadata.cc",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-29T03:01:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f52cfc06_6ddcea48",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d307bb20_3bb0e5d4",
        "filename": "tools/gn/metadata.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2018-11-27T20:25:44Z",
      "side": 1,
      "message": "We should use the logging macros instead of the C assert function. If we really need a runtime check, we can use CHECK, but I think this is probably OK to do DCHECK().",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aed8d036_6efa57d4",
        "filename": "tools/gn/metadata.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-29T03:01:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d307bb20_3bb0e5d4",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dbcf8d_7bd7a6e2",
        "filename": "tools/gn/metadata.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2018-11-28T01:38:42Z",
      "side": 1,
      "message": "This sentence seems unfinished (and unpunctuated).  Did it mean to say, \"... (with the empty string \"\" indicating the containing target\u0027s deps of all kinds should be used).\" or something like that?",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1d76b37_0a671731",
        "filename": "tools/gn/metadata.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-29T03:01:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dbcf8d_7bd7a6e2",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a876079a_6941c736",
        "filename": "tools/gn/metadata.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2018-11-28T01:38:42Z",
      "side": 1,
      "message": "I think Google/Chrome style is to use pointers rather than mutable references for result parameters, but I\u0027m no expert.",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53a33f87_21481c5a",
        "filename": "tools/gn/metadata.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-29T03:01:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a876079a_6941c736",
      "revId": "e098d48bc74e1e50be4f425ab26835cec5fcb5e5",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    }
  ]
}