{
  "comments": [
    {
      "key": {
        "uuid": "a179da56_f6f8e870",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2020-08-11T20:29:34Z",
      "side": 1,
      "message": "For what it\u0027s worth, I\u0027ve been working on the py2-\u003epy3 migration for Chromium lately and I\u0027m adopting the approach that brettw@ suggested in his last sentence of \n",
      "revId": "31ebb0335ee5b0f5723ca1990beb6d8868da8e83",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f93f60c_4266af7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-08-14T22:32:12Z",
      "side": 1,
      "message": "It got cut off and I forgot what I said. Can you continue this thought?\n\nIf an approach is working for Chromium, I\u0027d rather not mess with it.",
      "parentUuid": "a179da56_f6f8e870",
      "revId": "31ebb0335ee5b0f5723ca1990beb6d8868da8e83",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1531c3a3_745e5cb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2020-08-14T22:55:11Z",
      "side": 1,
      "message": "whoops, rest of the comment should follow.",
      "revId": "31ebb0335ee5b0f5723ca1990beb6d8868da8e83",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60745ad1_928150ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2020-08-14T22:55:11Z",
      "side": 1,
      "message": "[ argh, somehow hit send accidentally ... ]\n\nhttps://gn-review.googlesource.com/c/gn/+/7302/1#message-e316aa175b5d244e68b7e066444b29c9ebeb8e8c :\n\n\"Have you considered writing a Python 2 program that runs the final script in Python 3?\"\n\nexcept that I have a script that will unconditionally run things in python2 regardless of whether the main script_executable is python2 or python3.\n\nYou can see https://crrev.com/c/2333868 for the work-in-progress; it defines a \u0027python2_action()\u0027 template.\n\nAs to this particular approach, I can see some merit to it. I have always liked the \"just use one language for script\" philosophy, but even in Chromium today we do have some wrappers that turn around and execute something else (notably //build/util/java_action.py).",
      "parentUuid": "a179da56_f6f8e870",
      "revId": "31ebb0335ee5b0f5723ca1990beb6d8868da8e83",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24ab731e_b484df95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000628
      },
      "writtenOn": "2020-08-15T01:16:21Z",
      "side": 1,
      "message": "Hi Brett and Dirk,\n\nI was aware of the Chromium change, and that\u0027s why I cc\u0027d Dirk on this.\n\nThe only theoretical problems I\u0027m aware of with that approach are:\n\n1) Passing \"--script-executable\u003dpython3\" on the command line (or setting the value via .gn) doesn\u0027t do the path search that is done by default for python on Windows.\n2) You pay a small penalty for launching python3 only to turn about and launch python2 for the cases that still need the older version.\n\nI don\u0027t know of those will be actual problems for Chromium.\n\nI\u0027m working on my own Chromium CL that adds/uses a \"python3_action\", for the reverse of what Dirk is doing, to kind of incrementally opt in to Python 3, at least for my CL.\n\nI thought a change to gn itself to support either version (and potentially both for a gradual migration) was nicer, so I put this together after looking around a bit.\n",
      "revId": "31ebb0335ee5b0f5723ca1990beb6d8868da8e83",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "789e521a_8a8b5281",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2020-08-17T18:36:37Z",
      "side": 1,
      "message": "I think there\u0027s some merit in evaluating this regardless of what may or may not work for Chrome.\n\nAs noted, Chrome already has workarounds for actions run in other languages, Java and Node/JS being two obvious examples, and that need isn\u0027t going away.\n\nAt some point we might ideally want GN to have more things properly baked into the language (iOS targets, Android targets, Web/Node targets), but there\u0027s likely always going to be things that aren\u0027t baked in, and having better support for non-baked-in things seems like it might be a good idea.",
      "revId": "31ebb0335ee5b0f5723ca1990beb6d8868da8e83",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac",
      "unresolved": false
    }
  ]
}