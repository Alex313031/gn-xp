{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "385a20b4_3162453e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2021-12-08T20:45:26Z",
      "side": 1,
      "message": "Brett, I\u0027m at loss understanding the Windows Access Violation (0xc0000005) error that happens when running the gn_unittests.exe executable, and I don\u0027t even see some output. Do you know of a way to debug this?\n\nI\u0027ll try to revive my Windows machine to see if I can reproduce this locally, but let me know if you have other ideas. For the record, running with valgrind on Linux doesn\u0027t show any memory-related errors :-/",
      "revId": "552f8ea026bbdf68cfa64c1e9d86631465389fd6",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c39c3bf_c817f28a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-12-08T20:52:48Z",
      "side": 1,
      "message": "I\u0027ll try on my Windows machine when I get home today.",
      "revId": "552f8ea026bbdf68cfa64c1e9d86631465389fd6",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c439e1c_db08d8fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-12-09T03:44:05Z",
      "side": 1,
      "message": "That was very confusing! It\u0027s crashing initializing a static:\n\n\u003e\t`anonymous namespace\u0027::KeyNode::is_null() Line 51\tC++\tSymbols loaded.\n \tHashTableBase\u003c`anonymous namespace\u0027::KeyNode\u003e::NodeLookup\u003cbool \u003clambda\u003e(const `anonymous-namespace\u0027::KeyNode *)\u003e(unsigned __int64 hash\u003d13708407063574621040, `anonymous-namespace\u0027::KeySet::Lookup::__l2::bool \u003clambda\u003e(const `anonymous-namespace\u0027::KeyNode *) node_equal\u003dbool \u003clambda\u003e(const `anonymous-namespace\u0027::KeyNode * node){...}) Line 461\tC++\tSymbols loaded.\n \t`anonymous namespace\u0027::KeySet::Lookup(unsigned __int64 hash\u003d13708407063574621040, std::basic_string_view\u003cchar,std::char_traits\u003cchar\u003e\u003e str\u003d{...}) Line 99\tC++\tSymbols loaded.\n \t`anonymous namespace\u0027::ThreadLocalCache::find(std::basic_string_view\u003cchar,std::char_traits\u003cchar\u003e\u003e key\u003d{...}) Line 194\tC++\tSymbols loaded.\n \tStringAtom::StringAtom(std::basic_string_view\u003cchar,std::char_traits\u003cchar\u003e\u003e str\u003d{...}) Line 222\tC++\tSymbols loaded.\n \t`anonymous namespace\u0027::SourceDirStringAtom(std::basic_string_view\u003cchar,std::char_traits\u003cchar\u003e\u003e s\u003d{...}) Line 70\tC++\tSymbols loaded.\n \tSourceDir::SourceDir(std::basic_string_view\u003cchar,std::char_traits\u003cchar\u003e\u003e s\u003d{...}) Line 75\tC++\tSymbols loaded.\n \t`dynamic initializer for \u0027kLabel1\u0027\u0027() Line 10\tC++\tSymbols loaded.\n",
      "revId": "552f8ea026bbdf68cfa64c1e9d86631465389fd6",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1a8d841_06a8931f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2021-12-09T11:06:57Z",
      "side": 1,
      "message": "Thank you, that is super useful. I guess the problem is that we\u0027re constructing a static const global in the unit-test, which relies on a thread_local static variable defined in another compilation unit. Ordering of these cases is not guaranteed to be correct by the standard. The fix is probably to get rid of the \" \" \"static const Label\" declarations then.",
      "parentUuid": "1c439e1c_db08d8fb",
      "revId": "552f8ea026bbdf68cfa64c1e9d86631465389fd6",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f6f0bad_8a521d48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2021-12-09T11:27:46Z",
      "side": 1,
      "message": "And that was it, confirmed by CQ. Wow, thanks again!",
      "parentUuid": "c1a8d841_06a8931f",
      "revId": "552f8ea026bbdf68cfa64c1e9d86631465389fd6",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}