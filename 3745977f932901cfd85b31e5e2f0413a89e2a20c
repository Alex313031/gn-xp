{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e0ab1dc4_2564456d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T23:37:14Z",
      "side": 1,
      "message": "The BinaryData changes are, for me, getting to be too subtle to justify a ~10% performance improvement.\n\nTarget resolution is already super complicated and critical. Adding more complexity and optimization makes it harder to understand and to implement future changes (say, something like adding Rust support or, in the future, better built-in support for Fuchsia packaging).\n\nGN runtime improvements are nice (I sent a change to improve the Err object along these lines) but incremental performance improvements in GN wouldn\u0027t be on my list of the most important problems we have with the build that I would want to spend a \"complexity budget\" on.\n\nIf you want, maybe we should have a meeting next week with more people variously involved in the build to discuss where we think the bar for this kind of thing should be. I\u0027m also interested in a broader discussion (this might already be happening without me -- feel free to point me to any notes) about where GN work falls into overall build work. There are a bunch of things that I can think of that could be done, and some of them might be helped by changes in the GN tool.",
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c80cbb34_b8496727",
        "filename": "src/gn/target.cc",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T21:59:07Z",
      "side": 1,
      "message": "Is it possible to DCHECK here if `!IsBinary()`?",
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77b98b00_16e6cb47",
        "filename": "src/gn/target.cc",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T22:06:26Z",
      "side": 1,
      "message": "From the other patch, I understand how this works now and why we can\u0027t do this.",
      "parentUuid": "c80cbb34_b8496727",
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "611400d2_a6c6f297",
        "filename": "src/gn/target.cc",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T22:34:30Z",
      "side": 1,
      "message": "Actually, I realize I\u0027m wrong again. I\u0027m worried some of this stuff is getting a little too subtle, let me start an email thread.",
      "parentUuid": "77b98b00_16e6cb47",
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df151606_38aa06dc",
        "filename": "src/gn/target.cc",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T21:59:07Z",
      "side": 1,
      "message": "It looks like this will create the binary_data_ object each time a target is resolved. Was that your intention? I thought this should only get created for binary targets.",
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c863347_0197e63d",
        "filename": "src/gn/target.h",
        "patchSetId": 2
      },
      "lineNbr": 575,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T21:59:07Z",
      "side": 1,
      "message": "Can you add a comment here about when this will be set and also that users should go through the binary_data() lazy accessor rather than using directly?",
      "range": {
        "startLine": 575,
        "startChar": 2,
        "endLine": 575,
        "endChar": 43
      },
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cd72cc8_4479eaf2",
        "filename": "src/gn/target.h",
        "patchSetId": 2
      },
      "lineNbr": 575,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2022-01-05T22:06:26Z",
      "side": 1,
      "message": "This should also mention the fact that this can be created for non-binary targets to avoid my confusion from the previous round.",
      "parentUuid": "7c863347_0197e63d",
      "range": {
        "startLine": 575,
        "startChar": 2,
        "endLine": 575,
        "endChar": 43
      },
      "revId": "3745977f932901cfd85b31e5e2f0413a89e2a20c",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}