{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6bddaaae_1b07c053",
        "filename": "src/gn/ninja_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-10-27T02:53:53Z",
      "side": 1,
      "message": "I don\u0027t quite understand what\u0027s going on here. Can this mention why Rust needs all static libraries of dependencies? What about source sets? Coming from a C++ perspective, needing to link static libraries but not source sets doesn\u0027t make any sense.\n\nAlso, I found the wording here confusing. Can you remove \"(even incomplete)\" and use \"all\". This is misleading because complete-vs-incomplete never matters when linking a static library into something else like an executable, they all get added. The only reason a complete static library will matter is when it\u0027s the type of target_ in this class.",
      "revId": "e5b8d5f594e17dad622d6500fb04277633a18553",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26045f47_0dc5701d",
        "filename": "src/gn/ninja_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-10-28T00:14:42Z",
      "side": 1,
      "message": "I would think source sets ought to be handled the same.",
      "parentUuid": "6bddaaae_1b07c053",
      "revId": "e5b8d5f594e17dad622d6500fb04277633a18553",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d83565_62a6dfa1",
        "filename": "src/gn/ninja_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-10-30T20:15:38Z",
      "side": 1,
      "message": "This would also confuse me, since a source set just means \"compile the obj files and link them into where needed\" that we would not be specifying every dependent obj file in all source sets on every compile line.\n\nIt seems like maybe we need to clarify the rules for Rust at a broader level. Like if this change is correct, maybe Rust source sets shouldn\u0027t be a thing.",
      "parentUuid": "26045f47_0dc5701d",
      "revId": "e5b8d5f594e17dad622d6500fb04277633a18553",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f09083b_313689b4",
        "filename": "src/gn/ninja_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-10-30T21:02:20Z",
      "side": 1,
      "message": "I was imagining C/C++ source sets. I also don\u0027t know that Rust source sets should be a thing, I\u0027m not sure how they would be used.\n\nThough after reading your above comment again, I realized that I don\u0027t actually know what effect this change has.",
      "parentUuid": "d2d83565_62a6dfa1",
      "revId": "e5b8d5f594e17dad622d6500fb04277633a18553",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81f4b72d_a92b6659",
        "filename": "src/gn/ninja_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-06T08:33:38Z",
      "side": 1,
      "message": "I have updated the code and combined the Rust library and static library cases since they\u0027re the same, hopefully it makes more sense now. We don\u0027t support Rust source sets so that\u0027s not an issue and C/C++ source sets are handled differently in that they aren\u0027t supported directly by Rust, rather we pass the object files directly to the linker which is only necessary for binary targets.",
      "parentUuid": "2f09083b_313689b4",
      "revId": "e5b8d5f594e17dad622d6500fb04277633a18553",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}