{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "efd8ae52_ba91e572",
        "filename": "src/gn/ninja_rust_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-07-06T14:46:49Z",
      "side": 1,
      "message": "This should also be done for non-final targets, see comment below.",
      "revId": "7d11a5da9f6e255b3d7c0a70c96d6d8e58f98698",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18c3c076_ab6c3dbb",
        "filename": "src/gn/ninja_rust_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-07-06T14:46:49Z",
      "side": 1,
      "message": "nit: s/requires/required/ :-)",
      "revId": "7d11a5da9f6e255b3d7c0a70c96d6d8e58f98698",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1fd6f08_f2270d5f",
        "filename": "src/gn/ninja_rust_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-07-06T14:46:49Z",
      "side": 1,
      "message": "This only pushes the lib_dirs value of the dependencies to the rlib command.\nThis is not enough to fix the bug because when depending directly on a static_library() target, the `path/to/foo.a` value will be in `nonrustdeps`, and must generate an `-Lnative\u003dpath/to` as well.",
      "revId": "7d11a5da9f6e255b3d7c0a70c96d6d8e58f98698",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b69552f6_721beeac",
        "filename": "src/gn/ninja_rust_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1002072
      },
      "writtenOn": "2023-07-06T15:07:06Z",
      "side": 1,
      "message": "Could you help me understand why a GN deps on foo.a (which has no bearing on rust code) means that rustc needs the path to it when compiling a crate?",
      "parentUuid": "f1fd6f08_f2270d5f",
      "revId": "7d11a5da9f6e255b3d7c0a70c96d6d8e58f98698",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee68288c_a863f838",
        "filename": "src/gn/ninja_rust_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-07-06T15:18:25Z",
      "side": 1,
      "message": "In this case because the lib.rs for the crate has `#[link(name \u003d \"foo\", kind \u003d \"static\")] ` directive.\n\nThe example I am referring to is [1] for the crate and [2] for the static_library(). Note that `rustc_library()` is a Fuchsia-specific GN template, but you can treat it as a `rust_library()` for simplicity.\n\n[1] https://cs.opensource.google/fuchsia/fuchsia/+/main:src/developer/ffx/lib/buildid/BUILD.gn;l\u003d7\n[2] https://cs.opensource.google/fuchsia/fuchsia/+/main:src/developer/ffx/lib/buildid/cpp/BUILD.gn;l\u003d5",
      "parentUuid": "b69552f6_721beeac",
      "revId": "7d11a5da9f6e255b3d7c0a70c96d6d8e58f98698",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d4fb7c3_9c5afc35",
        "filename": "src/gn/ninja_rust_binary_target_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-07-06T15:22:32Z",
      "side": 1,
      "message": "Also, we cannot guess the value of lib_dirs in the target definition for a dependency label, because the exact value will depend on the toolchain() definition used to build it (but the information is available after everything is resolved, i.e. in the ninja_rust_binary_target_writer.cc).",
      "parentUuid": "ee68288c_a863f838",
      "revId": "7d11a5da9f6e255b3d7c0a70c96d6d8e58f98698",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ]
}