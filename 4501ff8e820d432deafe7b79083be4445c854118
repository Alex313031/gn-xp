{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9d9b5e8c_f7eb4b22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000662
      },
      "writtenOn": "2023-01-29T11:51:45Z",
      "side": 1,
      "message": "ptal, thanks!",
      "revId": "4501ff8e820d432deafe7b79083be4445c854118",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54dbc330_71f410bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2023-01-29T16:11:15Z",
      "side": 1,
      "message": "Thanks",
      "revId": "4501ff8e820d432deafe7b79083be4445c854118",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b33db3a_2ea3fee1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2023-01-30T21:23:54Z",
      "side": 1,
      "message": "+David: do you know why the Linux bot is failing with rpmalloc errors? I didn\u0027t even see this file in my local GN checkout.",
      "revId": "4501ff8e820d432deafe7b79083be4445c854118",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa7f5392_c8676ac0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-01-30T21:40:48Z",
      "side": 1,
      "message": "Thank you, the recipe failure is unrelated to this CL, I\u0027ll try to fix it separately today. Please be patient. Thanks!",
      "revId": "4501ff8e820d432deafe7b79083be4445c854118",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a54b4368_7a1073f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000067
      },
      "writtenOn": "2023-01-30T22:40:49Z",
      "side": 1,
      "message": "Yes, Clang has been updated to version 16 and has a new warning that is triggered by the rpmalloc sources (-Wunsafe-buffer-usage).\n\nI have uploaded a fix that updates rpmalloc to a more recent revision (which contains fixes for clang-15), and patch the configure.py to add -Wno-unsafe-buffer-usage. https://gn-review.git.corp.google.com/c/gn/+/15021\n\nThe root of the problem is that for Clang, the rpmalloc build/ninja/clang.py adds `-Weverything` then a bunch of explicit `-Wno-xxxx` flags, and this is very fragile and breaks whenever a new clang version comes out with new warnings. We had something similar when we updated to Clang-15.\n\nI\u0027ll try to submit a fix upstream, but -Wno-unsafe-buffer-usage does not exist in clang-15 and before :-/",
      "parentUuid": "8b33db3a_2ea3fee1",
      "revId": "4501ff8e820d432deafe7b79083be4445c854118",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af5fb333_ac412ab4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2023-01-30T22:43:50Z",
      "side": 1,
      "message": "Thanks for taking a look.",
      "parentUuid": "a54b4368_7a1073f7",
      "revId": "4501ff8e820d432deafe7b79083be4445c854118",
      "serverId": "c360c8e5-7aa8-3905-a7a0-810934766dac"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4501ff8e820d432deafe7b79083be4445c854118",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4501ff8e820d432deafe7b79083be4445c854118",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}